// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$cart-name: 'cart';
$cart-x: 17px;
$cart-y: 35px;
$cart-offset-x: -17px;
$cart-offset-y: -35px;
$cart-width: 20px;
$cart-height: 16px;
$cart-total-width: 75px;
$cart-total-height: 55px;
$cart-image: '../img/sprite.png';
$cart: (17px, 35px, -17px, -35px, 20px, 16px, 75px, 55px, '../img/sprite.png', 'cart', );
$cup-name: 'cup';
$cup-x: 20px;
$cup-y: 0px;
$cup-offset-x: -20px;
$cup-offset-y: 0px;
$cup-width: 20px;
$cup-height: 20px;
$cup-total-width: 75px;
$cup-total-height: 55px;
$cup-image: '../img/sprite.png';
$cup: (20px, 0px, -20px, 0px, 20px, 20px, 75px, 55px, '../img/sprite.png', 'cup', );
$diagram-name: 'diagram';
$diagram-x: 60px;
$diagram-y: 0px;
$diagram-offset-x: -60px;
$diagram-offset-y: 0px;
$diagram-width: 15px;
$diagram-height: 15px;
$diagram-total-width: 75px;
$diagram-total-height: 55px;
$diagram-image: '../img/sprite.png';
$diagram: (60px, 0px, -60px, 0px, 15px, 15px, 75px, 55px, '../img/sprite.png', 'diagram', );
$email-name: 'email';
$email-x: 37px;
$email-y: 35px;
$email-offset-x: -37px;
$email-offset-y: -35px;
$email-width: 20px;
$email-height: 15px;
$email-total-width: 75px;
$email-total-height: 55px;
$email-image: '../img/sprite.png';
$email: (37px, 35px, -37px, -35px, 20px, 15px, 75px, 55px, '../img/sprite.png', 'email', );
$lang-name: 'lang';
$lang-x: 0px;
$lang-y: 20px;
$lang-offset-x: 0px;
$lang-offset-y: -20px;
$lang-width: 24px;
$lang-height: 15px;
$lang-total-width: 75px;
$lang-total-height: 55px;
$lang-image: '../img/sprite.png';
$lang: (0px, 20px, 0px, -20px, 24px, 15px, 75px, 55px, '../img/sprite.png', 'lang', );
$location-name: 'location';
$location-x: 60px;
$location-y: 15px;
$location-offset-x: -60px;
$location-offset-y: -15px;
$location-width: 12px;
$location-height: 16px;
$location-total-width: 75px;
$location-total-height: 55px;
$location-image: '../img/sprite.png';
$location: (60px, 15px, -60px, -15px, 12px, 16px, 75px, 55px, '../img/sprite.png', 'location', );
$phone-name: 'phone';
$phone-x: 24px;
$phone-y: 20px;
$phone-offset-x: -24px;
$phone-offset-y: -20px;
$phone-width: 15px;
$phone-height: 15px;
$phone-total-width: 75px;
$phone-total-height: 55px;
$phone-image: '../img/sprite.png';
$phone: (24px, 20px, -24px, -20px, 15px, 15px, 75px, 55px, '../img/sprite.png', 'phone', );
$plane-name: 'plane';
$plane-x: 40px;
$plane-y: 0px;
$plane-offset-x: -40px;
$plane-offset-y: 0px;
$plane-width: 20px;
$plane-height: 18px;
$plane-total-width: 75px;
$plane-total-height: 55px;
$plane-image: '../img/sprite.png';
$plane: (40px, 0px, -40px, 0px, 20px, 18px, 75px, 55px, '../img/sprite.png', 'plane', );
$portfolio-name: 'portfolio';
$portfolio-x: 40px;
$portfolio-y: 18px;
$portfolio-offset-x: -40px;
$portfolio-offset-y: -18px;
$portfolio-width: 20px;
$portfolio-height: 17px;
$portfolio-total-width: 75px;
$portfolio-total-height: 55px;
$portfolio-image: '../img/sprite.png';
$portfolio: (40px, 18px, -40px, -18px, 20px, 17px, 75px, 55px, '../img/sprite.png', 'portfolio', );
$search-name: 'search';
$search-x: 0px;
$search-y: 0px;
$search-offset-x: 0px;
$search-offset-y: 0px;
$search-width: 20px;
$search-height: 20px;
$search-total-width: 75px;
$search-total-height: 55px;
$search-image: '../img/sprite.png';
$search: (0px, 0px, 0px, 0px, 20px, 20px, 75px, 55px, '../img/sprite.png', 'search', );
$work-name: 'work';
$work-x: 0px;
$work-y: 35px;
$work-offset-x: 0px;
$work-offset-y: -35px;
$work-width: 17px;
$work-height: 20px;
$work-total-width: 75px;
$work-total-height: 55px;
$work-image: '../img/sprite.png';
$work: (0px, 35px, 0px, -35px, 17px, 20px, 75px, 55px, '../img/sprite.png', 'work', );
$spritesheet-width: 75px;
$spritesheet-height: 55px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($cart, $cup, $diagram, $email, $lang, $location, $phone, $plane, $portfolio, $search, $work, );
$spritesheet: (75px, 55px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
